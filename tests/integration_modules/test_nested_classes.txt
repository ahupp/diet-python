$ desugars nested_classes

calls = []


def record(tag: str):
    def decorator(cls):
        calls.append((tag, cls.__qualname__, getattr(cls, "label", None)))
        applied = list(getattr(cls, "applied_decorators", []))
        applied.append(tag)
        cls.applied_decorators = applied
        return cls

    return decorator


class Outer:
    label = "outer"

    @record(label + "_mid")
    class Mid:
        label = "mid"

        @record(label + "_inner")
        @record("stack")
        class Inner:
            label = "inner"

            @record(label + "_leaf")
            class Leaf:
                pass
=
import __dp__
calls = __dp__.list(())
def record(tag: str):

    def decorator(cls):
        calls.append((tag, cls.__qualname__, getattr(cls, "label", None)))
        applied = list(getattr(cls, "applied_decorators", __dp__.list(())))
        applied.append(tag)
        __dp__.setattr(cls, "applied_decorators", applied)
        return cls
    return decorator
def _dp_ns_Outer(_dp_class_ns):
    __dp__.setattr(_dp_class_ns, "label", "outer")
    __dp__.setattr(_dp_class_ns, "Mid", record(__dp__.add(_dp_class_ns.label, "_mid"))(__dp__.create_class("Mid", _dp_ns_Outer_Mid, (), None)))
    __dp__.setattr(_dp_class_ns, "__module__", __name__)
    __dp__.setattr(_dp_class_ns, "__qualname__", "Outer")
def _dp_ns_Outer_Mid(_dp_class_ns):
    __dp__.setattr(_dp_class_ns, "label", "mid")
    __dp__.setattr(_dp_class_ns, "Inner", record(__dp__.add(_dp_class_ns.label, "_inner"))(record("stack")(__dp__.create_class("Inner", _dp_ns_Outer_Mid_Inner, (), None))))
    __dp__.setattr(_dp_class_ns, "__module__", __name__)
    __dp__.setattr(_dp_class_ns, "__qualname__", "Outer.Mid")
def _dp_ns_Outer_Mid_Inner(_dp_class_ns):
    __dp__.setattr(_dp_class_ns, "label", "inner")
    __dp__.setattr(_dp_class_ns, "Leaf", record(__dp__.add(_dp_class_ns.label, "_leaf"))(__dp__.create_class("Leaf", _dp_ns_Outer_Mid_Inner_Leaf, (), None)))
    __dp__.setattr(_dp_class_ns, "__module__", __name__)
    __dp__.setattr(_dp_class_ns, "__qualname__", "Outer.Mid.Inner")
def _dp_ns_Outer_Mid_Inner_Leaf(_dp_class_ns):
    __dp__.setattr(_dp_class_ns, "__module__", __name__)
    __dp__.setattr(_dp_class_ns, "__qualname__", "Outer.Mid.Inner.Leaf")
Outer = __dp__.create_class("Outer", _dp_ns_Outer, (), None)
del _dp_ns_Outer_Mid_Inner_Leaf
del _dp_ns_Outer_Mid_Inner
del _dp_ns_Outer_Mid
del _dp_ns_Outer
