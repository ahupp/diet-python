$ desugars class_annotations_mutation

"""Exposes NameError when mutating __annotations__ in a class body."""

from typing import get_type_hints

class M(type):
    __annotations__['123'] = 123
    o: type = object

HINTS = get_type_hints(M)
=
"""Exposes NameError when mutating __annotations__ in a class body."""
import __dp__
_dp_import_1 = __dp__.import_("typing", __spec__, __dp__.list(("get_type_hints",)))
get_type_hints = __dp__.import_attr(_dp_import_1, "get_type_hints")
del _dp_import_1
def _dp_ns_M(_dp_class_ns):
    __dp__.setattr(_dp_class_ns, "__annotations__", _dp_class_ns.get("__annotations__"))
    _dp_tmp_2 = __dp__.is_(_dp_class_ns.__annotations__, None)
    if _dp_tmp_2:
        __dp__.setattr(_dp_class_ns, "__annotations__", __dp__.dict())
    __dp__.setitem(_dp_class_ns.__annotations__, '123', 123)
    __dp__.setattr(_dp_class_ns, "o", object)
    __dp__.setattr(_dp_class_ns, "__module__", __name__)
    __dp__.setattr(_dp_class_ns, "__qualname__", "M")
    _dp_class_annotations = _dp_class_ns.get("__annotations__")
    _dp_tmp_3 = __dp__.is_(_dp_class_annotations, None)
    if _dp_tmp_3:
        _dp_class_annotations = __dp__.dict()
    __dp__.setattr(_dp_class_ns, "__annotations__", _dp_class_annotations)
    __dp__.setitem(_dp_class_annotations, "o", type)
M = __dp__.create_class("M", _dp_ns_M, (type,), None)
del _dp_ns_M
HINTS = get_type_hints(M)
