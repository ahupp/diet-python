$ desugars property_setter

class Example:
    def __init__(self) -> None:
        self._value = 0

    @property
    def value(self) -> int:
        return self._value

    @value.setter
    def value(self, value: int) -> None:
        self._value = value
=
import __dp__
def _dp_ns_Example(_dp_ns):
    __dp_class_ns__ = _dp_ns

    def __init__(self) -> None:
        __dp__.setattr(self, "_value", 0)

    def value(self) -> int:
        return self._value
    __dp__.setitem(__dp_class_ns__, "value", property(__dp__.global_(globals(), "value")))
    __dp__.setitem(__dp_class_ns__, "_dp_tmp_1", __dp__.global_(globals(), "value").setter)

    def value(self, value: int) -> None:
        __dp__.setattr(self, "_value", value)
    __dp__.setitem(__dp_class_ns__, "value", _dp_tmp_1(__dp__.global_(globals(), "value")))
    __dp__.setitem(__dp_class_ns__, "__module__", __name__)
    __dp__.setitem(__dp_class_ns__, "__qualname__", "Example")
Example = __dp__.create_class("Example", _dp_ns_Example, (), None)
