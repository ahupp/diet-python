$ desugars method_docstring

class Example:
    def do_thing(self, value: int) -> int:
        """Example command."""
        return value


def build_help(cls):
    for name in ("thing",):
        method = getattr(cls, f"do_{name}")
        method.__doc__.strip()
        method.__annotations__["value"]


def build_annotations(cls):
    return cls.do_thing.__annotations__["return"]


build_help(Example)
=
import __dp__
def _dp_ns_Example(_dp_class_ns):

    def do_thing(self, value: int) -> int:
        """Example command."""
        return value
    __dp__.setattr(_dp_class_ns, "do_thing", do_thing)
    __dp__.setattr(_dp_class_ns, "__module__", __name__)
    __dp__.setattr(_dp_class_ns, "__qualname__", "Example")
Example = __dp__.create_class("Example", _dp_ns_Example, (), None)
del _dp_ns_Example
def build_help(cls):
    _dp_iter_1 = __dp__.iter(("thing",))
    while True:
        try:
            name = __dp__.next(_dp_iter_1)
        except:
            __dp__.check_stopiteration()
            break
        else:
            method = getattr(cls, "".join(("do_", format(name))))
            method.__doc__.strip()
            __dp__.getitem(method.__annotations__, "value")
def build_annotations(cls):
    return __dp__.getitem(cls.do_thing.__annotations__, "return")
build_help(Example)
