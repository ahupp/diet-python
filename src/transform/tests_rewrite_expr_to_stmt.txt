$ rewrites bool and assignment

x = a and b
=
_dp_tmp_1 = a
if _dp_tmp_1:
    _dp_tmp_1 = b
x = _dp_tmp_1

$ skips non bool assignment

x = value
=
x = value

$ rewrites bool expr statement

a and b
=
_dp_tmp_1 = a
if _dp_tmp_1:
    _dp_tmp_1 = b
_dp_tmp_1

$ rewrites simple compare assignment

x = a == b
=
_dp_tmp_1 = __dp__.eq(a, b)
x = _dp_tmp_1

$ rewrites chained compare assignment

x = a < b < c
=
_dp_tmp_1 = __dp__.lt(a, b)
if _dp_tmp_1:
    _dp_tmp_1 = __dp__.lt(b, c)
x = _dp_tmp_1

$ rewrites multi chained compare assignment

x = a < b <= c < d
=
_dp_tmp_1 = __dp__.lt(a, b)
if _dp_tmp_1:
    _dp_tmp_1 = __dp__.le(b, c)
if _dp_tmp_1:
    _dp_tmp_1 = __dp__.lt(c, d)
x = _dp_tmp_1

$ rewrites lambda in return stmt

return lambda: 1
=
def _dp_lambda_1():
    return 1
return _dp_lambda_1

$ rewrites lambda assignment

x = lambda: 1
=
def _dp_lambda_1():
    return 1
x = _dp_lambda_1

$ rewrites generator assignment

x = (i for i in items)
=
def _dp_gen_1(items):
    _dp_iter_2 = __dp__.iter(items)
    while True:
        try:
            i = __dp__.next(_dp_iter_2)
        except:
            __dp__.check_stopiteration()
            break
        else:
            yield i
x = _dp_gen_1(__dp__.iter(items))

$ rewrites yield from expression

x = yield from y
=
_dp_yield_from_state_2 = __dp__.yield_from_init(y)
_dp_yield_from_sent_3 = None
while True:
    _dp_tmp_4 = __dp__.ne(__dp__.getitem(_dp_yield_from_state_2, 0), __dp__.RUNNING)
    if _dp_tmp_4:
        break
    try:
        _dp_yield_from_sent_3 = yield __dp__.getitem(_dp_yield_from_state_2, 1)
    except:
        _dp_yield_from_state_2 = __dp__.yield_from_except(_dp_yield_from_state_2, __dp__.current_exception())
    else:
        _dp_yield_from_state_2 = __dp__.yield_from_next(_dp_yield_from_state_2, _dp_yield_from_sent_3)
_dp_tmp_1 = __dp__.getitem(_dp_yield_from_state_2, 1)
x = _dp_tmp_1

$ rewrites named expression in boolop

if (y := foo()) and bar:
    pass
=
_dp_tmp_2 = foo()
y = _dp_tmp_2
_dp_tmp_1 = _dp_tmp_2
if _dp_tmp_1:
    _dp_tmp_1 = bar
if _dp_tmp_1:
    pass
