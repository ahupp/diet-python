$ rewrites with statement

with a as b:
    c
=
_dp_tmp_3 = __dp__.with_enter(a)
_dp_tmp_4 = __dp__.unpack(_dp_tmp_3, (True, True))
b = __dp__.getitem(_dp_tmp_4, 0)
_dp_with_exit_1 = __dp__.getitem(_dp_tmp_4, 1)
_dp_with_active_2 = True
try:
    try:
        c
    except:
        _dp_with_active_2 = False
        __dp__.with_exit(_dp_with_exit_1, __dp__.exc_info())
    else:
        _dp_with_active_2 = False
        __dp__.with_exit(_dp_with_exit_1, None)
finally:
    if _dp_with_active_2:
        __dp__.with_exit(_dp_with_exit_1, None)

$ rewrites multiple with statement

with a as b, c as d:
    e
=
_dp_tmp_5 = __dp__.with_enter(a)
_dp_tmp_6 = __dp__.unpack(_dp_tmp_5, (True, True))
b = __dp__.getitem(_dp_tmp_6, 0)
_dp_with_exit_3 = __dp__.getitem(_dp_tmp_6, 1)
_dp_with_active_4 = True
try:
    try:
        _dp_tmp_7 = __dp__.with_enter(c)
        _dp_tmp_8 = __dp__.unpack(_dp_tmp_7, (True, True))
        d = __dp__.getitem(_dp_tmp_8, 0)
        _dp_with_exit_1 = __dp__.getitem(_dp_tmp_8, 1)
        _dp_with_active_2 = True
        try:
            try:
                e
            except:
                _dp_with_active_2 = False
                __dp__.with_exit(_dp_with_exit_1, __dp__.exc_info())
            else:
                _dp_with_active_2 = False
                __dp__.with_exit(_dp_with_exit_1, None)
        finally:
            if _dp_with_active_2:
                __dp__.with_exit(_dp_with_exit_1, None)
    except:
        _dp_with_active_4 = False
        __dp__.with_exit(_dp_with_exit_3, __dp__.exc_info())
    else:
        _dp_with_active_4 = False
        __dp__.with_exit(_dp_with_exit_3, None)
finally:
    if _dp_with_active_4:
        __dp__.with_exit(_dp_with_exit_3, None)

$ rewrites async with statement

async def f():
    async with a as b:
        c
=
async def f():
    _dp_tmp_3 = await __dp__.with_aenter(a)
    _dp_tmp_4 = __dp__.unpack(_dp_tmp_3, (True, True))
    b = __dp__.getitem(_dp_tmp_4, 0)
    _dp_awith_exit_1 = __dp__.getitem(_dp_tmp_4, 1)
    _dp_awith_active_2 = True
    try:
        try:
            c
        except:
            _dp_awith_active_2 = False
            await __dp__.with_aexit(_dp_awith_exit_1, __dp__.exc_info())
        else:
            _dp_awith_active_2 = False
            await __dp__.with_aexit(_dp_awith_exit_1, None)
    finally:
        if _dp_awith_active_2:
            await __dp__.with_aexit(_dp_awith_exit_1, None)

$ rewrites with starred target

with a as (b, *c):
    pass
=
_dp_tmp_3 = __dp__.with_enter(a)
_dp_tmp_4 = __dp__.unpack(_dp_tmp_3, (True, True))
_dp_tmp_5 = __dp__.getitem(_dp_tmp_4, 0)
_dp_tmp_6 = __dp__.unpack(_dp_tmp_5, (True, False))
b = __dp__.getitem(_dp_tmp_6, 0)
c = __dp__.tuple(__dp__.getitem(_dp_tmp_6, 1))
_dp_with_exit_1 = __dp__.getitem(_dp_tmp_4, 1)
_dp_with_active_2 = True
try:
    try:
        pass
    except:
        _dp_with_active_2 = False
        __dp__.with_exit(_dp_with_exit_1, __dp__.exc_info())
    else:
        _dp_with_active_2 = False
        __dp__.with_exit(_dp_with_exit_1, None)
finally:
    if _dp_with_active_2:
        __dp__.with_exit(_dp_with_exit_1, None)
