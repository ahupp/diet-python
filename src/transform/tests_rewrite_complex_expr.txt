$ rewrites yield from expression

x = yield from y
=
_dp_yield_from_state_1 = __dp__.yield_from_init(y)
_dp_yield_from_sent_2 = None
while True:
    _dp_tmp_4 = __dp__.getitem
    _dp_tmp_5 = _dp_tmp_4(_dp_yield_from_state_1, 0)
    _dp_tmp_6 = __dp__.RUNNING
    _dp_tmp_7 = __dp__.ne(_dp_tmp_5, _dp_tmp_6)
    if _dp_tmp_7:
        break
    try:
        _dp_yield_from_sent_2 = yield __dp__.getitem(_dp_yield_from_state_1, 1)
    except:
        _dp_yield_from_state_1 = __dp__.yield_from_except(_dp_yield_from_state_1, __dp__.current_exception())
    else:
        _dp_yield_from_state_1 = __dp__.yield_from_next(_dp_yield_from_state_1, _dp_yield_from_sent_2)
_dp_tmp_3 = __dp__.getitem(_dp_yield_from_state_1, 1)
x = _dp_tmp_3

$ rewrites named expression in boolop

if (y := foo()) and bar:
    pass
=
_dp_tmp_1 = (y := foo())
if _dp_tmp_1:
    _dp_tmp_1 = bar
if _dp_tmp_1:
    pass
