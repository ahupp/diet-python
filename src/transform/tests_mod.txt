$ strips type alias statement

type Alias = int
=
$ strips type aliases in if branches

if True:
    type Alias = int
    x = 1
elif False:
    type Alias = str
    y = 2
else:
    type Alias = bytes
    z = 3
=
if True:
    x = 1
else:
    if False:
        y = 2
    else:
        z = 3
$ strips type alias from class body

type Alias = int

class Foo:
    type Inner = str

    def method(self):
        return 1
=
def _dp_ns_Foo(_dp_class_ns):

    def method(self):
        return 1
    __dp__.setattr(_dp_class_ns, "method", method)
    __dp__.setattr(_dp_class_ns, "__module__", __name__)
    __dp__.setattr(_dp_class_ns, "__qualname__", "Foo")
Foo = __dp__.create_class("Foo", _dp_ns_Foo, (), None)
del _dp_ns_Foo
